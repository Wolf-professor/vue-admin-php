{"remainingRequest":"/Users/quan/code/vue-admin-php/view/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/quan/code/vue-admin-php/view/src/views/userManage/admin/authRole.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/quan/code/vue-admin-php/view/src/views/userManage/admin/authRole.vue","mtime":1648609501803},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/babel-loader/lib/index.js","mtime":1648609858414},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/cache-loader/dist/cjs.js","mtime":1614678925383},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/vue-loader/lib/index.js","mtime":1648609878333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    authRoleList,\n    authRoleAuthList,\n    authRoleAuth,\n    authRoleSave,\n    authRoleDelete\n} from \"../../../api/auth/authRole\";\nconst formJson = {\n    id: \"\",\n    name: \"\",\n    status: 1,\n    remark: \"\",\n    listorder: 999\n};\nexport default {\n    data() {\n        return {\n            query: {\n                name: \"\",\n                status: \"\",\n                page: 1,\n                limit: 20\n            },\n            list: [],\n            total: 0,\n            loading: true,\n            authList: [],\n            defaultProps: {\n                children: \"children\",\n                label: \"title\"\n            },\n            authLoading: false,\n            authFormVisible: false,\n            authFormData: {\n                role_id: \"\",\n                auth_rules: []\n            },\n            authDefaultCheckedKeys: [],\n            index: null,\n            formName: null,\n            formMap: {\n                add: \"新增\",\n                edit: \"编辑\"\n            },\n            formLoading: false,\n            formVisible: false,\n            formData: formJson,\n            formRules: {\n                name: [\n                    { required: true, message: \"请输入名称\", trigger: \"blur\" }\n                ],\n                status: [\n                    { required: true, message: \"请选择状态\", trigger: \"change\" }\n                ]\n            },\n            deleteLoading: false\n        };\n    },\n    methods: {\n        onReset() {\n            this.$router.push({\n                path: \"\"\n            });\n            this.query = {\n                name: \"\",\n                status: \"\",\n                page: 1,\n                limit: 20\n            };\n            this.getList();\n        },\n        onSubmit() {\n            this.getList();\n        },\n        handleCurrentChange(val) {\n            this.query.page = val;\n            this.getList();\n        },\n        getList() {\n            this.loading = true;\n            authRoleList(this.query)\n                .then(response => {\n                    this.loading = false;\n                    this.list = response.data.list || [];\n                    this.total = response.data.total || 0;\n                })\n                .catch(() => {\n                    this.loading = false;\n                    this.list = [];\n                    this.total = 0;\n                });\n        },\n        // 显示授权界面\n        handleAuth(roleId) {\n            this.authFormData.role_id = roleId;\n            this.authFormData.auth_rules = [];\n            this.authList = [];\n            authRoleAuthList({ id: roleId })\n                .then(response => {\n                    if (response.code) {\n                        this.authFormVisible = false;\n                        this.$message({\n                            message: response.message,\n                            type: \"error\"\n                        });\n                        return;\n                    }\n                    this.authFormVisible = true;\n                    this.authList = response.data.auth_list || [];\n                    const checkedKeys = response.data.checked_keys || [];\n                    let tempCheckedKeys = [];\n                    let id = null;\n                    let node = null;\n                    let getTreeNode = function(arr, id) {\n                        for (let i in arr) {\n                            let tempNode = arr[i];\n                            if (tempNode.id === id) {\n                                // 找到了，就不找了\n                                node = tempNode;\n                            }\n                            // 如果还有子节点，再继续找\n                            getTreeNode(tempNode.children, id);\n                        }\n                    };\n                    for (let i in checkedKeys) {\n                        id = checkedKeys[i];\n                        getTreeNode(this.authList, id);\n                        if (node && node.children.length <= 0) {\n                            // 如果下面没有子节点，则加入\n                            tempCheckedKeys.push(id);\n                        }\n                    }\n                    this.authDefaultCheckedKeys = [];\n                    this.authDefaultCheckedKeys = tempCheckedKeys;\n                    // this.$refs.tree.setCheckedKeys(tempCheckedKeys);\n                })\n                .catch(() => {});\n        },\n        authSubmit() {\n            this.authLoading = true;\n            let getNodeParents = function(node) {\n                let arr = [];\n                let id = node.data.id || null;\n                if (id) {\n                    arr.push(node.data.id);\n                }\n                if (node.parent) {\n                    arr = arr.concat(getNodeParents(node.parent));\n                }\n                return arr;\n            };\n            let checkedKeys = this.$refs.tree.getCheckedKeys();\n            let arr = [];\n            for (let checkedKey of checkedKeys) {\n                let node = this.$refs.tree.getNode(checkedKey);\n                arr = arr.concat(getNodeParents(node));\n            }\n            let setArr = new Set(arr);\n            this.authFormData.auth_rules = [...setArr];\n            if (!this.authFormData) {\n                this.$alert(\"请至少选择一个权限\", \"提示\", {\n                    confirmButtonText: \"确定\"\n                });\n                return false;\n            }\n            authRoleAuth(this.authFormData)\n                .then(response => {\n                    this.authLoading = false;\n                    if (response.code) {\n                        this.$message.error(response.message);\n                        return false;\n                    }\n                    this.$message.success(\"授权成功\");\n                    // 刷新表单\n                    this.authFormVisible = false;\n                })\n                .catch(() => {\n                    this.authLoading = false;\n                });\n        },\n        // 刷新表单\n        resetForm() {\n            if (this.$refs[\"dataForm\"]) {\n                // 清空验证信息表单\n                this.$refs[\"dataForm\"].clearValidate();\n                // 刷新表单\n                this.$refs[\"dataForm\"].resetFields();\n            }\n        },\n        // 隐藏表单\n        hideForm() {\n            // 更改值\n            this.formVisible = !this.formVisible;\n            return true;\n        },\n        // 显示表单\n        handleForm(index, row) {\n            this.formVisible = true;\n            this.formData = JSON.parse(JSON.stringify(formJson));\n            if (row !== null) {\n                this.formData = Object.assign({}, row);\n            }\n            this.formName = \"add\";\n            if (index !== null) {\n                this.index = index;\n                this.formName = \"edit\";\n            }\n        },\n        formSubmit() {\n            this.$refs[\"dataForm\"].validate(valid => {\n                if (valid) {\n                    this.formLoading = true;\n                    let data = Object.assign({}, this.formData);\n                    authRoleSave(data, this.formName)\n                        .then(response => {\n                            this.formLoading = false;\n                            if (response.code) {\n                                this.$message.error(response.message);\n                                return false;\n                            }\n                            this.$message.success(\"操作成功\");\n                            this.formVisible = false;\n                            if (this.formName === \"add\") {\n                                // 向头部添加数据\n                                if (response.data && response.data.id) {\n                                    data.id = response.data.id;\n                                    this.list.unshift(data);\n                                }\n                            } else {\n                                this.list.splice(this.index, 1, data);\n                            }\n                            // 刷新表单\n                            this.resetForm();\n                        })\n                        .catch(() => {\n                            this.formLoading = false;\n                        });\n                }\n            });\n        },\n        // 删除\n        handleDel(index, row) {\n            if (row.id) {\n                this.$confirm(\"确认删除该记录吗?\", \"提示\", {\n                    type: \"warning\"\n                })\n                    .then(() => {\n                        this.deleteLoading = true;\n                        let para = { id: row.id };\n                        authRoleDelete(para)\n                            .then(response => {\n                                this.deleteLoading = false;\n                                if (response.code) {\n                                    this.$message.error(response.message);\n                                    return false;\n                                }\n                                this.$message.success(\"删除成功\");\n                                // 刷新数据\n                                this.list.splice(index, 1);\n                            })\n                            .catch(() => {\n                                this.deleteLoading = false;\n                            });\n                    })\n                    .catch(() => {\n                        this.$message.info(\"取消删除\");\n                    });\n            }\n        }\n    },\n    filters: {\n        statusFilterType(status) {\n            const statusMap = {\n                0: \"gray\",\n                1: \"success\"\n            };\n            return statusMap[status];\n        },\n        statusFilterName(status) {\n            const statusMap = {\n                0: \"禁用\",\n                1: \"正常\"\n            };\n            return statusMap[status];\n        }\n    },\n    mounted() {},\n    created() {\n        // 加载表格数据\n        this.getList();\n    }\n};\n",{"version":3,"sources":["authRole.vue"],"names":[],"mappingsfile":"authRole.vue","sourceRoot":"src/views/userManage/admin","sourcesContent":["<template>\n    <div>\n        <el-form :inline=\"true\" :model=\"query\" class=\"query-form\" size=\"mini\">\n            <el-form-item class=\"query-form-item\">\n                <el-input v-model=\"query.name\" placeholder=\"角色名称\"></el-input>\n            </el-form-item>\n            <el-form-item class=\"query-form-item\">\n                <el-select v-model=\"query.status\" placeholder=\"状态\">\n                    <el-option label=\"全部\" value=\"\"></el-option>\n                    <el-option label=\"禁用\" value=\"0\"></el-option>\n                    <el-option label=\"正常\" value=\"1\"></el-option>\n                </el-select>\n            </el-form-item>\n\n            <el-form-item>\n                <el-button-group>\n                    <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"onReset\"></el-button>\n                    <el-button type=\"primary\" icon=\"search\" @click=\"onSubmit\">查询</el-button>\n                    <el-button type=\"primary\" @click.native=\"handleForm(null,null)\">新增</el-button>\n                </el-button-group>\n            </el-form-item>\n        </el-form>\n        <el-table\n            v-loading=\"loading\"\n            :data=\"list\"\n            style=\"width: 100%;\"\n            max-height=\"500\">\n            <el-table-column\n                label=\"角色 ID\"\n                prop=\"id\">\n            </el-table-column>\n            <el-table-column\n                label=\"角色名称\"\n                prop=\"name\">\n            </el-table-column>\n            <el-table-column\n                label=\"状态\">\n                <template slot-scope=\"scope\">\n                    <el-tag :type=\"scope.row.status | statusFilterType\">{{scope.row.status | statusFilterName}}</el-tag>\n                </template>\n            </el-table-column>\n            <el-table-column\n                label=\"描述\"\n                :show-overflow-tooltip=\"true\">\n                <template slot-scope=\"scope\">\n                    <span>{{ scope.row.remark }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column\n                label=\"操作\"\n                fixed=\"right\"\n                width=\"200\">\n                <template slot-scope=\"scope\">\n                    <el-button type=\"text\" size=\"small\" @click.native=\"handleAuth(scope.row.id)\">授权</el-button>\n                    <el-button type=\"text\" size=\"small\" @click.native=\"handleForm(scope.$index, scope.row)\">编辑</el-button>\n                    <el-button type=\"text\" size=\"small\" @click.native=\"handleDel(scope.$index, scope.row)\" :loading=\"deleteLoading\">删除</el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n\n        <el-pagination\n            :page-size=\"query.limit\"\n            @current-change=\"handleCurrentChange\"\n            layout=\"prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n\n        <!--授权界面-->\n        <el-dialog\n            title=\"授权\"\n            :visible.sync=\"authFormVisible\"\n            :close-on-click-modal=\"false\"\n            class=\"dialog\">\n            <el-tree\n                style=\"max-height: 75vh;overflow-y: auto;\"\n                :data=\"authList\"\n                show-checkbox=\"\"\n                default-expand-all=\"\"\n                node-key=\"id\"\n                ref=\"tree\"\n                :props=\"defaultProps\"\n                :default-checked-keys=\"authDefaultCheckedKeys\">\n            </el-tree>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"authFormVisible = !authFormVisible\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"authSubmit()\" :loading=\"authLoading\">提交\n                </el-button>\n            </div>\n        </el-dialog>\n\n        <!--表单-->\n        <el-dialog\n            :title=\"formMap[formName]\"\n            :visible.sync=\"formVisible\"\n            :before-close=\"hideForm\"\n            width=\"85%\"\n            top=\"5vh\">\n            <el-form :model=\"formData\" :rules=\"formRules\" ref=\"dataForm\">\n                <el-form-item label=\"角色名称\" prop=\"name\">\n                    <el-input v-model=\"formData.name\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"排序\" prop=\"listorder\">\n                    <el-input type=\"\" v-model=\"formData.listorder\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"状态\" prop=\"status\">\n                    <el-radio-group v-model=\"formData.status\">\n                        <el-radio :label=\"0\">禁用</el-radio>\n                        <el-radio :label=\"1\">正常</el-radio>\n                    </el-radio-group>\n                </el-form-item>\n                <el-form-item label=\"描述\">\n                    <el-input type=\"textarea\" v-model=\"formData.remark\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"hideForm\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"formSubmit()\" :loading=\"formLoading\">提交</el-button>\n            </div>\n        </el-dialog>\n    </div>\n\n</template>\n\n<script>\nimport {\n    authRoleList,\n    authRoleAuthList,\n    authRoleAuth,\n    authRoleSave,\n    authRoleDelete\n} from \"../../../api/auth/authRole\";\nconst formJson = {\n    id: \"\",\n    name: \"\",\n    status: 1,\n    remark: \"\",\n    listorder: 999\n};\nexport default {\n    data() {\n        return {\n            query: {\n                name: \"\",\n                status: \"\",\n                page: 1,\n                limit: 20\n            },\n            list: [],\n            total: 0,\n            loading: true,\n            authList: [],\n            defaultProps: {\n                children: \"children\",\n                label: \"title\"\n            },\n            authLoading: false,\n            authFormVisible: false,\n            authFormData: {\n                role_id: \"\",\n                auth_rules: []\n            },\n            authDefaultCheckedKeys: [],\n            index: null,\n            formName: null,\n            formMap: {\n                add: \"新增\",\n                edit: \"编辑\"\n            },\n            formLoading: false,\n            formVisible: false,\n            formData: formJson,\n            formRules: {\n                name: [\n                    { required: true, message: \"请输入名称\", trigger: \"blur\" }\n                ],\n                status: [\n                    { required: true, message: \"请选择状态\", trigger: \"change\" }\n                ]\n            },\n            deleteLoading: false\n        };\n    },\n    methods: {\n        onReset() {\n            this.$router.push({\n                path: \"\"\n            });\n            this.query = {\n                name: \"\",\n                status: \"\",\n                page: 1,\n                limit: 20\n            };\n            this.getList();\n        },\n        onSubmit() {\n            this.getList();\n        },\n        handleCurrentChange(val) {\n            this.query.page = val;\n            this.getList();\n        },\n        getList() {\n            this.loading = true;\n            authRoleList(this.query)\n                .then(response => {\n                    this.loading = false;\n                    this.list = response.data.list || [];\n                    this.total = response.data.total || 0;\n                })\n                .catch(() => {\n                    this.loading = false;\n                    this.list = [];\n                    this.total = 0;\n                });\n        },\n        // 显示授权界面\n        handleAuth(roleId) {\n            this.authFormData.role_id = roleId;\n            this.authFormData.auth_rules = [];\n            this.authList = [];\n            authRoleAuthList({ id: roleId })\n                .then(response => {\n                    if (response.code) {\n                        this.authFormVisible = false;\n                        this.$message({\n                            message: response.message,\n                            type: \"error\"\n                        });\n                        return;\n                    }\n                    this.authFormVisible = true;\n                    this.authList = response.data.auth_list || [];\n                    const checkedKeys = response.data.checked_keys || [];\n                    let tempCheckedKeys = [];\n                    let id = null;\n                    let node = null;\n                    let getTreeNode = function(arr, id) {\n                        for (let i in arr) {\n                            let tempNode = arr[i];\n                            if (tempNode.id === id) {\n                                // 找到了，就不找了\n                                node = tempNode;\n                            }\n                            // 如果还有子节点，再继续找\n                            getTreeNode(tempNode.children, id);\n                        }\n                    };\n                    for (let i in checkedKeys) {\n                        id = checkedKeys[i];\n                        getTreeNode(this.authList, id);\n                        if (node && node.children.length <= 0) {\n                            // 如果下面没有子节点，则加入\n                            tempCheckedKeys.push(id);\n                        }\n                    }\n                    this.authDefaultCheckedKeys = [];\n                    this.authDefaultCheckedKeys = tempCheckedKeys;\n                    // this.$refs.tree.setCheckedKeys(tempCheckedKeys);\n                })\n                .catch(() => {});\n        },\n        authSubmit() {\n            this.authLoading = true;\n            let getNodeParents = function(node) {\n                let arr = [];\n                let id = node.data.id || null;\n                if (id) {\n                    arr.push(node.data.id);\n                }\n                if (node.parent) {\n                    arr = arr.concat(getNodeParents(node.parent));\n                }\n                return arr;\n            };\n            let checkedKeys = this.$refs.tree.getCheckedKeys();\n            let arr = [];\n            for (let checkedKey of checkedKeys) {\n                let node = this.$refs.tree.getNode(checkedKey);\n                arr = arr.concat(getNodeParents(node));\n            }\n            let setArr = new Set(arr);\n            this.authFormData.auth_rules = [...setArr];\n            if (!this.authFormData) {\n                this.$alert(\"请至少选择一个权限\", \"提示\", {\n                    confirmButtonText: \"确定\"\n                });\n                return false;\n            }\n            authRoleAuth(this.authFormData)\n                .then(response => {\n                    this.authLoading = false;\n                    if (response.code) {\n                        this.$message.error(response.message);\n                        return false;\n                    }\n                    this.$message.success(\"授权成功\");\n                    // 刷新表单\n                    this.authFormVisible = false;\n                })\n                .catch(() => {\n                    this.authLoading = false;\n                });\n        },\n        // 刷新表单\n        resetForm() {\n            if (this.$refs[\"dataForm\"]) {\n                // 清空验证信息表单\n                this.$refs[\"dataForm\"].clearValidate();\n                // 刷新表单\n                this.$refs[\"dataForm\"].resetFields();\n            }\n        },\n        // 隐藏表单\n        hideForm() {\n            // 更改值\n            this.formVisible = !this.formVisible;\n            return true;\n        },\n        // 显示表单\n        handleForm(index, row) {\n            this.formVisible = true;\n            this.formData = JSON.parse(JSON.stringify(formJson));\n            if (row !== null) {\n                this.formData = Object.assign({}, row);\n            }\n            this.formName = \"add\";\n            if (index !== null) {\n                this.index = index;\n                this.formName = \"edit\";\n            }\n        },\n        formSubmit() {\n            this.$refs[\"dataForm\"].validate(valid => {\n                if (valid) {\n                    this.formLoading = true;\n                    let data = Object.assign({}, this.formData);\n                    authRoleSave(data, this.formName)\n                        .then(response => {\n                            this.formLoading = false;\n                            if (response.code) {\n                                this.$message.error(response.message);\n                                return false;\n                            }\n                            this.$message.success(\"操作成功\");\n                            this.formVisible = false;\n                            if (this.formName === \"add\") {\n                                // 向头部添加数据\n                                if (response.data && response.data.id) {\n                                    data.id = response.data.id;\n                                    this.list.unshift(data);\n                                }\n                            } else {\n                                this.list.splice(this.index, 1, data);\n                            }\n                            // 刷新表单\n                            this.resetForm();\n                        })\n                        .catch(() => {\n                            this.formLoading = false;\n                        });\n                }\n            });\n        },\n        // 删除\n        handleDel(index, row) {\n            if (row.id) {\n                this.$confirm(\"确认删除该记录吗?\", \"提示\", {\n                    type: \"warning\"\n                })\n                    .then(() => {\n                        this.deleteLoading = true;\n                        let para = { id: row.id };\n                        authRoleDelete(para)\n                            .then(response => {\n                                this.deleteLoading = false;\n                                if (response.code) {\n                                    this.$message.error(response.message);\n                                    return false;\n                                }\n                                this.$message.success(\"删除成功\");\n                                // 刷新数据\n                                this.list.splice(index, 1);\n                            })\n                            .catch(() => {\n                                this.deleteLoading = false;\n                            });\n                    })\n                    .catch(() => {\n                        this.$message.info(\"取消删除\");\n                    });\n            }\n        }\n    },\n    filters: {\n        statusFilterType(status) {\n            const statusMap = {\n                0: \"gray\",\n                1: \"success\"\n            };\n            return statusMap[status];\n        },\n        statusFilterName(status) {\n            const statusMap = {\n                0: \"禁用\",\n                1: \"正常\"\n            };\n            return statusMap[status];\n        }\n    },\n    mounted() {},\n    created() {\n        // 加载表格数据\n        this.getList();\n    }\n};\n</script>\n\n<style type=\"text/scss\" lang=\"scss\">\n</style>\n"]}]}