{"remainingRequest":"/Users/quan/code/vue-admin-php/view/node_modules/thread-loader/dist/cjs.js!/Users/quan/code/vue-admin-php/view/node_modules/babel-loader/lib/index.js!/Users/quan/code/vue-admin-php/view/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/quan/code/vue-admin-php/view/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/quan/code/vue-admin-php/view/src/views/userManage/admin/authPermissionRule.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/quan/code/vue-admin-php/view/src/views/userManage/admin/authPermissionRule.vue","mtime":1648609501803},{"path":"/Users/quan/code/vue-admin-php/view/babel.config.js","mtime":1648609501757},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/cache-loader/dist/cjs.js","mtime":1614678925383},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/thread-loader/dist/cjs.js","mtime":1614678926780},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/babel-loader/lib/index.js","mtime":1648609858414},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/cache-loader/dist/cjs.js","mtime":1614678925383},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/vue-loader/lib/index.js","mtime":1648609878333}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { authPermissionRuleList, authPermissionRuleSave, authPermissionRuleDelete } from \"../../../api/auth/authPermissionRule\";\nvar formJson = {\n  id: \"\",\n  pid: \"2\",\n  name: \"\",\n  title: \"\",\n  status: 1,\n  condition: \"\",\n  listorder: 999\n};\nexport default {\n  data: function data() {\n    return {\n      query: {\n        name: \"\",\n        status: \"\"\n      },\n      mergeList: [],\n      node: null,\n      defaultProps: {\n        children: \"children\",\n        label: \"title\"\n      },\n      treeList: [],\n      loading: true,\n      index: null,\n      formName: null,\n      formMap: {\n        add: \"新增\",\n        edit: \"编辑\"\n      },\n      formLoading: false,\n      formVisible: false,\n      formData: formJson,\n      formRules: {\n        name: [{\n          required: true,\n          message: \"请输入规则名\",\n          trigger: \"blur\"\n        }],\n        title: [{\n          required: true,\n          message: \"请输入标题\",\n          trigger: \"blur\"\n        }],\n        status: [{\n          required: true,\n          message: \"请选择状态\",\n          trigger: \"change\"\n        }]\n      },\n      pidData: {},\n      deleteLoading: false\n    };\n  },\n  methods: {\n    /*eslint-disable */\n    renderContent: function renderContent(h, _ref) {\n      var _this = this;\n\n      var node = _ref.node,\n          data = _ref.data,\n          store = _ref.store;\n      return h(\"span\", {\n        \"style\": \"flex: 1; display: flex; align-items: center; justify-content: space-between; font-size: 14px; padding-right: 8px;\"\n      }, [h(\"span\", [h(\"span\", {\n        \"attrs\": {\n          \"title\": data.name\n        }\n      }, [node.label])]), h(\"span\", [h(\"el-button\", {\n        \"style\": \"font-size: 12px;\",\n        \"attrs\": {\n          \"type\": \"text\"\n        },\n        \"on\": {\n          \"click\": function click() {\n            return _this.handleForm(node, data, 'add');\n          }\n        }\n      }, [\"\\u6DFB\\u52A0\\u5B50\\u83DC\\u5355\"]), h(\"el-button\", {\n        \"style\": \"font-size: 12px;\",\n        \"attrs\": {\n          \"type\": \"text\"\n        },\n        \"on\": {\n          \"click\": function click() {\n            return _this.handleForm(node, data, 'edit');\n          }\n        }\n      }, [\"\\u7F16\\u8F91\"]), h(\"el-button\", {\n        \"style\": \"font-size: 12px;\",\n        \"attrs\": {\n          \"type\": \"text\"\n        },\n        \"on\": {\n          \"click\": function click() {\n            return _this.handleDel(node, data);\n          }\n        }\n      }, [\"\\u5220\\u9664\"])])]);\n    },\n    onReset: function onReset() {\n      this.$router.push({\n        path: \"\"\n      });\n      this.query = {\n        name: \"\",\n        status: \"\"\n      };\n      this.getList();\n    },\n    onSubmit: function onSubmit() {\n      this.getList();\n    },\n    getList: function getList() {\n      var _this2 = this;\n\n      this.loading = true;\n      authPermissionRuleList(this.query).then(function (response) {\n        _this2.loading = false;\n        _this2.mergeList = response.data.list || [];\n        _this2.treeList = response.data.tree_list || [];\n      }).catch(function () {\n        _this2.loading = false;\n        _this2.mergeList = [];\n        _this2.treeList = [];\n      });\n    },\n    // 刷新表单\n    resetForm: function resetForm() {\n      if (this.$refs[\"dataForm\"]) {\n        // 清空验证信息表单\n        this.$refs[\"dataForm\"].clearValidate(); // 刷新表单\n\n        this.$refs[\"dataForm\"].resetFields();\n      }\n    },\n    // 隐藏表单\n    hideForm: function hideForm() {\n      // 更改值\n      this.formVisible = !this.formVisible;\n      return true;\n    },\n    // 显示表单\n    handleForm: function handleForm(node, data, formName) {\n      this.formVisible = true;\n      this.pidData = data || null;\n      formJson.pid = data && parseInt(data.id) || \"\";\n      this.formData = JSON.parse(JSON.stringify(formJson));\n\n      if (formName === \"edit\") {\n        this.formData = Object.assign({}, data);\n        this.node = node;\n      }\n\n      this.formData.pid = !this.formData.pid ? \"\" : this.formData.pid;\n      this.formName = formName;\n\n      if (data && data.id) {\n        this.index = this.mergeList.findIndex(function (d) {\n          return d.id === data.id;\n        });\n      }\n    },\n    formSubmit: function formSubmit() {\n      var _this3 = this;\n\n      this.$refs[\"dataForm\"].validate(function (valid) {\n        if (valid) {\n          _this3.formLoading = true;\n          var data = Object.assign({}, _this3.formData);\n          authPermissionRuleSave(data, _this3.formName).then(function (response) {\n            _this3.formLoading = false;\n\n            if (response.code) {\n              _this3.$message.error(response.message);\n\n              return false;\n            }\n\n            _this3.$message.success(\"操作成功\");\n\n            _this3.formVisible = false;\n\n            if (_this3.formName !== \"edit\") {\n              if (response.data && response.data.id) {\n                data.id = response.data.id;\n\n                if (_this3.pidData) {\n                  if (!_this3.pidData.children) {\n                    _this3.$set(_this3.pidData, \"children\", []);\n                  }\n\n                  _this3.pidData.children.push(data);\n                } else {\n                  _this3.mergeList.push(data);\n                }\n              }\n            } else {\n              var parent = _this3.node.parent;\n              var children = parent.data.children || parent.data;\n              var index = children.findIndex(function (d) {\n                return d.id === data.id;\n              });\n              children.splice(index, 1, data);\n            } // 刷新表单\n\n\n            _this3.resetForm();\n          }).catch(function () {\n            _this3.formLoading = false;\n          });\n        }\n      });\n    },\n    // 删除\n    handleDel: function handleDel(node, data) {\n      var _this4 = this;\n\n      if (data.children && data.children.length > 0) {\n        this.$alert(\"请先删除子节点\", \"提示\", {\n          confirmButtonText: \"确定\"\n        });\n        return false;\n      }\n\n      if (data.id) {\n        this.$confirm(\"确认删除该记录吗?\", \"提示\", {\n          type: \"warning\"\n        }).then(function () {\n          _this4.deleteLoading = true;\n          var para = {\n            id: data.id\n          };\n          authPermissionRuleDelete(para).then(function (response) {\n            _this4.deleteLoading = false;\n\n            if (response.code) {\n              _this4.$message.error(response.message);\n\n              return false;\n            }\n\n            _this4.$message.success(\"删除成功\");\n\n            var parent = node.parent;\n            var children = parent.data.children || parent.data;\n            var index = children.findIndex(function (d) {\n              return d.id === data.id;\n            });\n            children.splice(index, 1);\n          }).catch(function () {\n            _this4.deleteLoading = false;\n          });\n        }).catch(function () {\n          _this4.$message.info(\"取消删除\");\n        });\n      }\n    }\n  },\n  filters: {\n    statusFilterType: function statusFilterType(status) {\n      var statusMap = {\n        0: \"gray\",\n        1: \"success\"\n      };\n      return statusMap[status];\n    },\n    statusFilterName: function statusFilterName(status) {\n      var statusMap = {\n        0: \"禁用\",\n        1: \"正常\"\n      };\n      return statusMap[status];\n    }\n  },\n  mounted: function mounted() {},\n  created: function created() {\n    // 加载表格数据\n    this.getList();\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA,SACAA,sBADA,EAEAC,sBAFA,EAGAC,wBAHA;AAKA;AACAC,QADA;AAEAC,UAFA;AAGAC,UAHA;AAIAC,WAJA;AAKAC,WALA;AAMAC,eANA;AAOAC;AAPA;AASA;AACAC,MADA,kBACA;AACA;AACAC;AACAN,gBADA;AAEAE;AAFA,OADA;AAKAK,mBALA;AAMAC,gBANA;AAOAC;AACAC,4BADA;AAEAC;AAFA,OAPA;AAWAC,kBAXA;AAYAC,mBAZA;AAaAC,iBAbA;AAcAC,oBAdA;AAeAC;AACAC,iBADA;AAEAC;AAFA,OAfA;AAmBAC,wBAnBA;AAoBAC,wBApBA;AAqBAC,wBArBA;AAsBAC;AACAtB,eACA;AAAAuB;AAAAC;AAAAC;AAAA,SADA,CADA;AAIAxB,gBACA;AAAAsB;AAAAC;AAAAC;AAAA,SADA,CAJA;AAOAvB,iBACA;AAAAqB;AAAAC;AAAAC;AAAA,SADA;AAPA,OAtBA;AAiCAC,iBAjCA;AAkCAC;AAlCA;AAoCA,GAtCA;AAuCAC;AACA;AACAC,iBAFA,yBAEAC,CAFA,QAEA;AAAA;;AAAA;AAAA;AAAA;AACA;AAAA,iBACA;AADA;AAAA;AAAA,mBAGAzB;AAHA;AAAA,UAGAG,UAHA;AAAA,iBAMA,kBANA;AAAA;AAAA,kBAMA;AANA;AAAA;AAAA,mBAMA;AAAA;AAAA;AANA;AAAA;AAAA,iBAOA,kBAPA;AAAA;AAAA,kBAOA;AAPA;AAAA;AAAA,mBAOA;AAAA;AAAA;AAPA;AAAA;AAAA,iBAQA,kBARA;AAAA;AAAA,kBAQA;AARA;AAAA;AAAA,mBAQA;AAAA;AAAA;AARA;AAAA;AAWA,KAdA;AAeAuB,WAfA,qBAeA;AACA;AACAC;AADA;AAGA;AACAhC,gBADA;AAEAE;AAFA;AAIA;AACA,KAxBA;AAyBA+B,YAzBA,sBAyBA;AACA;AACA,KA3BA;AA4BAC,WA5BA,qBA4BA;AAAA;;AACA;AACAvC,yCACAwC,IADA,CACA;AACA;AACA;AACA;AACA,OALA,EAMAC,KANA,CAMA;AACA;AACA;AACA;AACA,OAVA;AAWA,KAzCA;AA0CA;AACAC,aA3CA,uBA2CA;AACA;AACA;AACA,+CAFA,CAGA;;AACA;AACA;AACA,KAlDA;AAmDA;AACAC,YApDA,sBAoDA;AACA;AACA;AACA;AACA,KAxDA;AAyDA;AACAC,cA1DA,sBA0DA/B,IA1DA,EA0DAH,IA1DA,EA0DAU,QA1DA,EA0DA;AACA;AACA;AACAyB;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AAAA;AAAA;AACA;AACA,KAxEA;AAyEAC,cAzEA,wBAyEA;AAAA;;AACA;AACA;AACA;AACA;AACA7C,wDACAuC,IADA,CACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;;AACA;;AACA;AACA;AACA9B;;AACA;AACA;AACA,gCACA,cADA,EAEA,UAFA,EAGA,EAHA;AAKA;;AACA;AACA,iBATA,MASA;AACA;AACA;AACA;AACA,aAhBA,MAgBA;AACA;AACA,6BACAqC,mCADA;AAEA,6CACA;AAAA;AAAA,eADA;AAGAhC;AACA,aAhCA,CAiCA;;;AACA;AACA,WApCA,EAqCA0B,KArCA,CAqCA;AACA;AACA,WAvCA;AAwCA;AACA,OA7CA;AA8CA,KAxHA;AAyHA;AACAO,aA1HA,qBA0HAnC,IA1HA,EA0HAH,IA1HA,EA0HA;AAAA;;AACA;AACA;AACAuC;AADA;AAGA;AACA;;AACA;AACA;AACAC;AADA,WAGAV,IAHA,CAGA;AACA;AACA;AAAArC;AAAA;AACAD,yCACAsC,IADA,CACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;;AACA;AACA,2BACAO,mCADA;AAEA,2CACA;AAAA;AAAA,aADA;AAGAhC;AACA,WAfA,EAgBA0B,KAhBA,CAgBA;AACA;AACA,WAlBA;AAmBA,SAzBA,EA0BAA,KA1BA,CA0BA;AACA;AACA,SA5BA;AA6BA;AACA;AAhKA,GAvCA;AAyMAU;AACAC,oBADA,4BACA7C,MADA,EACA;AACA;AACA,iBADA;AAEA;AAFA;AAIA;AACA,KAPA;AAQA8C,oBARA,4BAQA9C,MARA,EAQA;AACA;AACA,eADA;AAEA;AAFA;AAIA;AACA;AAdA,GAzMA;AAyNA+C,SAzNA,qBAyNA,EAzNA;AA0NAC,SA1NA,qBA0NA;AACA;AACA;AACA;AA7NA","names":["authPermissionRuleList","authPermissionRuleSave","authPermissionRuleDelete","id","pid","name","title","status","condition","listorder","data","query","mergeList","node","defaultProps","children","label","treeList","loading","index","formName","formMap","add","edit","formLoading","formVisible","formData","formRules","required","message","trigger","pidData","deleteLoading","methods","renderContent","h","onReset","path","onSubmit","getList","then","catch","resetForm","hideForm","handleForm","formJson","formSubmit","parent","handleDel","confirmButtonText","type","filters","statusFilterType","statusFilterName","mounted","created"],"sourceRoot":"src/views/userManage/admin","sources":["authPermissionRule.vue"],"sourcesContent":["<template>\n    <div>\n        <el-form :inline=\"true\" :model=\"query\" class=\"query-form\" size=\"mini\">\n            <el-form-item class=\"query-form-item\">\n                <el-input v-model=\"query.name\" placeholder=\"角色名称\"></el-input>\n            </el-form-item>\n            <el-form-item class=\"query-form-item\">\n                <el-select v-model=\"query.status\" placeholder=\"状态\">\n                    <el-option label=\"全部\" value=\"\"></el-option>\n                    <el-option label=\"禁用\" value=\"0\"></el-option>\n                    <el-option label=\"正常\" value=\"1\"></el-option>\n                </el-select>\n            </el-form-item>\n\n            <el-form-item>\n                <el-button-group>\n                    <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"onReset\"></el-button>\n                    <el-button type=\"primary\" icon=\"search\" @click=\"onSubmit\">查询</el-button>\n                    <el-button type=\"primary\" @click.native=\"handleForm(null,null)\">新增</el-button>\n                </el-button-group>\n            </el-form-item>\n        </el-form>\n\n        <el-tree\n            :data=\"mergeList\"\n            :props=\"defaultProps\"\n            node-key=\"id\"\n            default-expand-all\n            :expand-on-click-node=\"false\"\n            :render-content=\"renderContent\">\n        </el-tree>\n\n        <!--表单界面-->\n        <el-dialog\n            :title=\"formMap[formName]\"\n            :visible.sync=\"formVisible\"\n            :before-close=\"hideForm\"\n            width=\"85%\"\n            top=\"5vh\">\n            <el-form :model=\"formData\" :rules=\"formRules\" ref=\"dataForm\">\n                <el-form-item label=\"父ID\" prop=\"pid\">\n                    <el-select v-model=\"formData.pid\" placeholder=\"顶级\">\n                        <el-option\n                            v-for=\"item in treeList\"\n                            :key=\"item.id\"\n                            :label=\"item.title\"\n                            :value=\"item.id\">\n                            <span style=\"float: left\"><span v-html=\"item.html\"></span>{{ item.title }}</span>\n                        </el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"规则名\" prop=\"name\">\n                    <el-input type=\"\" v-model=\"formData.name\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"规则标题\" prop=\"title\">\n                    <el-input type=\"\" v-model=\"formData.title\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"状态\" prop=\"status\">\n                    <el-radio-group v-model=\"formData.status\">\n                        <el-radio :label=\"0\">禁用</el-radio>\n                        <el-radio :label=\"1\">正常</el-radio>\n                    </el-radio-group>\n                </el-form-item>\n                <el-form-item label=\"额外的规则表达式\">\n                    <el-input type=\"textarea\" v-model=\"formData.condition\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"排序\" prop=\"listorder\">\n                    <el-input type=\"\" v-model=\"formData.listorder\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"hideForm\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"formSubmit()\" :loading=\"formLoading\">提交</el-button>\n            </div>\n        </el-dialog>\n    </div>\n\n</template>\n\n<script>\nimport {\n    authPermissionRuleList,\n    authPermissionRuleSave,\n    authPermissionRuleDelete\n} from \"../../../api/auth/authPermissionRule\";\nconst formJson = {\n    id: \"\",\n    pid: \"2\",\n    name: \"\",\n    title: \"\",\n    status: 1,\n    condition: \"\",\n    listorder: 999\n};\nexport default {\n    data() {\n        return {\n            query: {\n                name: \"\",\n                status: \"\"\n            },\n            mergeList: [],\n            node: null,\n            defaultProps: {\n                children: \"children\",\n                label: \"title\"\n            },\n            treeList: [],\n            loading: true,\n            index: null,\n            formName: null,\n            formMap: {\n                add: \"新增\",\n                edit: \"编辑\"\n            },\n            formLoading: false,\n            formVisible: false,\n            formData: formJson,\n            formRules: {\n                name: [\n                    { required: true, message: \"请输入规则名\", trigger: \"blur\" }\n                ],\n                title: [\n                    { required: true, message: \"请输入标题\", trigger: \"blur\" }\n                ],\n                status: [\n                    { required: true, message: \"请选择状态\", trigger: \"change\" }\n                ]\n            },\n            pidData: {},\n            deleteLoading: false\n        };\n    },\n    methods: {\n        /*eslint-disable */\n        renderContent (h, { node, data, store }) {\n            return (\n                <span style=\"flex: 1; display: flex; align-items: center; justify-content: space-between; font-size: 14px; padding-right: 8px;\">\n                <span>\n                <span title={ data.name }>{node.label}</span>\n            </span>\n            <span>\n            <el-button style=\"font-size: 12px;\" type=\"text\" on-click={ () => this.handleForm(node, data, 'add') }>添加子菜单</el-button>\n            <el-button style=\"font-size: 12px;\" type=\"text\" on-click={ () => this.handleForm(node, data, 'edit') }>编辑</el-button>\n            <el-button style=\"font-size: 12px;\" type=\"text\" on-click={ () => this.handleDel(node, data) }>删除</el-button>\n            </span>\n            </span>)\n        },\n        onReset() {\n            this.$router.push({\n                path: \"\"\n            });\n            this.query = {\n                name: \"\",\n                status: \"\"\n            };\n            this.getList();\n        },\n        onSubmit() {\n            this.getList();\n        },\n        getList() {\n            this.loading = true;\n            authPermissionRuleList(this.query)\n                .then(response => {\n                    this.loading = false;\n                    this.mergeList = response.data.list || [];\n                    this.treeList = response.data.tree_list || [];\n                })\n                .catch(() => {\n                    this.loading = false;\n                    this.mergeList = [];\n                    this.treeList = [];\n                });\n        },\n        // 刷新表单\n        resetForm() {\n            if (this.$refs[\"dataForm\"]) {\n                // 清空验证信息表单\n                this.$refs[\"dataForm\"].clearValidate();\n                // 刷新表单\n                this.$refs[\"dataForm\"].resetFields();\n            }\n        },\n        // 隐藏表单\n        hideForm() {\n            // 更改值\n            this.formVisible = !this.formVisible;\n            return true;\n        },\n        // 显示表单\n        handleForm(node, data, formName) {\n            this.formVisible = true;\n            this.pidData = data || null;\n            formJson.pid = (data && parseInt(data.id)) || \"\";\n            this.formData = JSON.parse(JSON.stringify(formJson));\n            if (formName === \"edit\") {\n                this.formData = Object.assign({}, data);\n                this.node = node;\n            }\n            this.formData.pid = !this.formData.pid ? \"\" : this.formData.pid;\n            this.formName = formName;\n            if (data && data.id) {\n                this.index = this.mergeList.findIndex(d => d.id === data.id);\n            }\n        },\n        formSubmit() {\n            this.$refs[\"dataForm\"].validate(valid => {\n                if (valid) {\n                    this.formLoading = true;\n                    let data = Object.assign({}, this.formData);\n                    authPermissionRuleSave(data, this.formName)\n                        .then(response => {\n                            this.formLoading = false;\n                            if (response.code) {\n                                this.$message.error(response.message);\n                                return false;\n                            }\n                            this.$message.success(\"操作成功\");\n                            this.formVisible = false;\n                            if (this.formName !== \"edit\") {\n                                if (response.data && response.data.id) {\n                                    data.id = response.data.id;\n                                    if (this.pidData) {\n                                        if (!this.pidData.children) {\n                                            this.$set(\n                                                this.pidData,\n                                                \"children\",\n                                                []\n                                            );\n                                        }\n                                        this.pidData.children.push(data);\n                                    } else {\n                                        this.mergeList.push(data);\n                                    }\n                                }\n                            } else {\n                                const parent = this.node.parent;\n                                const children =\n                                    parent.data.children || parent.data;\n                                const index = children.findIndex(\n                                    d => d.id === data.id\n                                );\n                                children.splice(index, 1, data);\n                            }\n                            // 刷新表单\n                            this.resetForm();\n                        })\n                        .catch(() => {\n                            this.formLoading = false;\n                        });\n                }\n            });\n        },\n        // 删除\n        handleDel(node, data) {\n            if (data.children && data.children.length > 0) {\n                this.$alert(\"请先删除子节点\", \"提示\", {\n                    confirmButtonText: \"确定\"\n                });\n                return false;\n            }\n            if (data.id) {\n                this.$confirm(\"确认删除该记录吗?\", \"提示\", {\n                    type: \"warning\"\n                })\n                    .then(() => {\n                        this.deleteLoading = true;\n                        let para = { id: data.id };\n                        authPermissionRuleDelete(para)\n                            .then(response => {\n                                this.deleteLoading = false;\n                                if (response.code) {\n                                    this.$message.error(response.message);\n                                    return false;\n                                }\n                                this.$message.success(\"删除成功\");\n                                const parent = node.parent;\n                                const children =\n                                    parent.data.children || parent.data;\n                                const index = children.findIndex(\n                                    d => d.id === data.id\n                                );\n                                children.splice(index, 1);\n                            })\n                            .catch(() => {\n                                this.deleteLoading = false;\n                            });\n                    })\n                    .catch(() => {\n                        this.$message.info(\"取消删除\");\n                    });\n            }\n        }\n    },\n    filters: {\n        statusFilterType(status) {\n            const statusMap = {\n                0: \"gray\",\n                1: \"success\"\n            };\n            return statusMap[status];\n        },\n        statusFilterName(status) {\n            const statusMap = {\n                0: \"禁用\",\n                1: \"正常\"\n            };\n            return statusMap[status];\n        }\n    },\n    mounted() {},\n    created() {\n        // 加载表格数据\n        this.getList();\n    }\n};\n</script>\n\n<style type=\"text/scss\" lang=\"scss\">\n</style>\n"]}]}