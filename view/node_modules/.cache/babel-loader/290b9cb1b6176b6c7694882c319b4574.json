{"remainingRequest":"/Users/quan/code/vue-admin-php/view/node_modules/thread-loader/dist/cjs.js!/Users/quan/code/vue-admin-php/view/node_modules/babel-loader/lib/index.js!/Users/quan/code/vue-admin-php/view/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/quan/code/vue-admin-php/view/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/quan/code/vue-admin-php/view/src/views/userManage/admin/authAdmin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/quan/code/vue-admin-php/view/src/views/userManage/admin/authAdmin.vue","mtime":1648609501803},{"path":"/Users/quan/code/vue-admin-php/view/babel.config.js","mtime":1648609501757},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/cache-loader/dist/cjs.js","mtime":1614678925383},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/thread-loader/dist/cjs.js","mtime":1614678926780},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/babel-loader/lib/index.js","mtime":1648609858414},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/cache-loader/dist/cjs.js","mtime":1614678925383},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/vue-loader/lib/index.js","mtime":1648609878333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { authAdminList, authAdminRoleList, authAdminSave, authAdminDelete } from \"../../../api/auth/authAdmin\";\nvar formJson = {\n  id: \"\",\n  password: \"\",\n  username: \"\",\n  checkPassword: \"\",\n  status: 1,\n  roles: []\n};\nexport default {\n  data: function data() {\n    var _this = this;\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"请输入密码\"));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== _this.formData.password) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      roles: [],\n      query: {\n        username: \"\",\n        status: \"\",\n        page: 1,\n        limit: 20,\n        role_id: \"\"\n      },\n      list: [],\n      total: 0,\n      loading: true,\n      index: null,\n      formName: null,\n      formMap: {\n        add: \"新增\",\n        edit: \"编辑\"\n      },\n      formLoading: false,\n      formVisible: false,\n      formData: formJson,\n      formRules: {},\n      addRules: {\n        username: [{\n          required: true,\n          message: \"请输入姓名\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          validator: validatePass,\n          trigger: \"blur\"\n        }],\n        checkPassword: [{\n          required: true,\n          message: \"请再次输入密码\",\n          trigger: \"blur\"\n        }, {\n          validator: validatePass2,\n          trigger: \"blur\"\n        }],\n        status: [{\n          required: true,\n          message: \"请选择状态\",\n          trigger: \"change\"\n        }]\n      },\n      editRules: {\n        username: [{\n          required: true,\n          message: \"请输入姓名\",\n          trigger: \"blur\"\n        }],\n        status: [{\n          required: true,\n          message: \"请选择状态\",\n          trigger: \"change\"\n        }]\n      },\n      deleteLoading: false\n    };\n  },\n  methods: {\n    onReset: function onReset() {\n      this.$router.push({\n        path: \"\"\n      });\n      this.query = {\n        username: \"\",\n        status: \"\",\n        page: 1,\n        limit: 20,\n        role_id: \"\"\n      };\n      this.getList();\n    },\n    onSubmit: function onSubmit() {\n      this.$router.push({\n        path: \"\",\n        query: this.query\n      });\n      this.getList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.query.page = val;\n      this.getList();\n    },\n    getList: function getList() {\n      var _this2 = this;\n\n      this.loading = true;\n      authAdminList(this.query).then(function (response) {\n        _this2.loading = false;\n        _this2.list = response.data.list || [];\n        _this2.total = response.data.total || 0;\n      }).catch(function () {\n        _this2.loading = false;\n        _this2.list = [];\n        _this2.total = 0;\n        _this2.roles = [];\n      });\n    },\n    getRoleList: function getRoleList() {\n      var _this3 = this;\n\n      authAdminRoleList(this.query).then(function (response) {\n        _this3.roles = response.data.list || [];\n      }).catch(function () {\n        _this3.roles = [];\n      });\n    },\n    // 刷新表单\n    resetForm: function resetForm() {\n      if (this.$refs[\"dataForm\"]) {\n        // 清空验证信息表单\n        this.$refs[\"dataForm\"].clearValidate(); // 刷新表单\n\n        this.$refs[\"dataForm\"].resetFields();\n      }\n    },\n    // 隐藏表单\n    hideForm: function hideForm() {\n      // 更改值\n      this.formVisible = !this.formVisible; // 清空表单\n\n      this.$refs[\"dataForm\"].resetFields();\n      return true;\n    },\n    // 显示表单\n    handleForm: function handleForm(index, row) {\n      this.formVisible = true;\n      this.formData = JSON.parse(JSON.stringify(formJson));\n\n      if (row !== null) {\n        this.formData = Object.assign({}, row);\n      }\n\n      this.formName = \"add\";\n      this.formRules = this.addRules;\n\n      if (index !== null) {\n        this.index = index;\n        this.formName = \"edit\";\n        this.formRules = this.editRules;\n      }\n    },\n    formSubmit: function formSubmit() {\n      var _this4 = this;\n\n      this.$refs[\"dataForm\"].validate(function (valid) {\n        if (valid) {\n          _this4.formLoading = true;\n          var data = Object.assign({}, _this4.formData);\n          authAdminSave(data, _this4.formName).then(function (response) {\n            _this4.formLoading = false;\n\n            if (response.code) {\n              _this4.$message.error(response.message);\n\n              return false;\n            }\n\n            _this4.$message.success(\"操作成功\");\n\n            _this4.formVisible = false;\n\n            if (_this4.formName === \"add\") {\n              // 向头部添加数据\n              if (response.data && response.data.id) {\n                data.id = response.data.id;\n\n                _this4.list.unshift(data);\n              }\n            } else {\n              _this4.list.splice(_this4.index, 1, data);\n            } // 刷新表单\n\n\n            _this4.resetForm();\n          });\n        }\n      });\n    },\n    // 删除\n    handleDel: function handleDel(index, row) {\n      var _this5 = this;\n\n      if (row.id) {\n        this.$confirm(\"确认删除该记录吗?\", \"提示\", {\n          type: \"warning\"\n        }).then(function () {\n          var para = {\n            id: row.id\n          };\n          _this5.deleteLoading = true;\n          authAdminDelete(para).then(function (response) {\n            _this5.deleteLoading = false;\n\n            if (response.code) {\n              _this5.$message.error(response.message);\n\n              return false;\n            }\n\n            _this5.$message.success(\"操作成功\"); // 刷新数据\n\n\n            _this5.list.splice(index, 1);\n          }).catch(function () {\n            _this5.deleteLoading = false;\n          });\n        }).catch(function () {\n          _this5.$message.info(\"取消删除\");\n        });\n      }\n    }\n  },\n  filters: {\n    statusFilterType: function statusFilterType(status) {\n      var statusMap = {\n        0: \"gray\",\n        1: \"success\",\n        2: \"danger\"\n      };\n      return statusMap[status];\n    },\n    statusFilterName: function statusFilterName(status) {\n      var statusMap = {\n        0: \"禁用\",\n        1: \"正常\",\n        2: \"未验证\"\n      };\n      return statusMap[status];\n    }\n  },\n  mounted: function mounted() {},\n  created: function created() {\n    // 将参数拷贝进查询对象\n    var query = this.$route.query;\n    this.query = Object.assign(this.query, query);\n    this.query.limit = parseInt(this.query.limit); // 加载表格数据\n\n    this.getList(); // 加载角色列表\n\n    this.getRoleList();\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA,SACAA,aADA,EAEAC,iBAFA,EAGAC,aAHA,EAIAC,eAJA;AAMA;AACAC,QADA;AAEAC,cAFA;AAGAC,cAHA;AAIAC,mBAJA;AAKAC,WALA;AAMAC;AANA;AAQA;AACAC,MADA,kBACA;AAAA;;AACA;AACA;AACAC;AACA,OAFA,MAEA;AACAA;AACA;AACA,KANA;;AAOA;AACA;AACAA;AACA,OAFA,MAEA;AACAA;AACA,OAFA,MAEA;AACAA;AACA;AACA,KARA;;AASA;AACAF,eADA;AAEAG;AACAN,oBADA;AAEAE,kBAFA;AAGAK,eAHA;AAIAC,iBAJA;AAKAC;AALA,OAFA;AASAC,cATA;AAUAC,cAVA;AAWAC,mBAXA;AAYAC,iBAZA;AAaAC,oBAbA;AAcAC;AACAC,iBADA;AAEAC;AAFA,OAdA;AAkBAC,wBAlBA;AAmBAC,wBAnBA;AAoBAC,wBApBA;AAqBAC,mBArBA;AAsBAC;AACAtB,mBACA;AAAAuB;AAAAC;AAAAC;AAAA,SADA,CADA;AAIA1B,mBACA;AAAAwB;AAAAC;AAAAC;AAAA,SADA,EAEA;AAAAC;AAAAD;AAAA,SAFA,CAJA;AAQAxB,wBACA;AACAsB,wBADA;AAEAC,4BAFA;AAGAC;AAHA,SADA,EAMA;AAAAC;AAAAD;AAAA,SANA,CARA;AAgBAvB,iBACA;AAAAqB;AAAAC;AAAAC;AAAA,SADA;AAhBA,OAtBA;AA0CAE;AACA3B,mBACA;AAAAuB;AAAAC;AAAAC;AAAA,SADA,CADA;AAIAvB,iBACA;AAAAqB;AAAAC;AAAAC;AAAA,SADA;AAJA,OA1CA;AAkDAG;AAlDA;AAoDA,GAtEA;AAuEAC;AACAC,WADA,qBACA;AACA;AACAC;AADA;AAGA;AACA/B,oBADA;AAEAE,kBAFA;AAGAK,eAHA;AAIAC,iBAJA;AAKAC;AALA;AAOA;AACA,KAbA;AAcAuB,YAdA,sBAcA;AACA;AACAD,gBADA;AAEAzB;AAFA;AAIA;AACA,KApBA;AAqBA2B,uBArBA,+BAqBAC,GArBA,EAqBA;AACA;AACA;AACA,KAxBA;AAyBAC,WAzBA,qBAyBA;AAAA;;AACA;AACAzC,gCACA0C,IADA,CACA;AACA;AACA;AACA;AACA,OALA,EAMAC,KANA,CAMA;AACA;AACA;AACA;AACA;AACA,OAXA;AAYA,KAvCA;AAwCAC,eAxCA,yBAwCA;AAAA;;AACA3C,oCACAyC,IADA,CACA;AACA;AACA,OAHA,EAIAC,KAJA,CAIA;AACA;AACA,OANA;AAOA,KAhDA;AAiDA;AACAE,aAlDA,uBAkDA;AACA;AACA;AACA,+CAFA,CAGA;;AACA;AACA;AACA,KAzDA;AA0DA;AACAC,YA3DA,sBA2DA;AACA;AACA,2CAFA,CAGA;;AACA;AACA;AACA,KAjEA;AAkEA;AACAC,cAnEA,sBAmEA5B,KAnEA,EAmEA6B,GAnEA,EAmEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,KAhFA;AAiFAC,cAjFA,wBAiFA;AAAA;;AACA;AACA;AACA;AACA;AACA/C;AACA;;AACA;AACA;;AACA;AACA;;AACA;;AACA;;AACA;AACA;AACA;AACAQ;;AACA;AACA;AACA,aANA,MAMA;AACA;AACA,aAhBA,CAiBA;;;AACA;AACA,WAnBA;AAoBA;AACA,OAzBA;AA0BA,KA5GA;AA6GA;AACAwC,aA9GA,qBA8GA/B,KA9GA,EA8GA6B,GA9GA,EA8GA;AAAA;;AACA;AACA;AACAG;AADA,WAGAT,IAHA,CAGA;AACA;AAAAtC;AAAA;AACA;AACAD,gCACAuC,IADA,CACA;AACA;;AACA;AACA;;AACA;AACA;;AACA,4CANA,CAOA;;;AACA;AACA,WAVA,EAWAC,KAXA,CAWA;AACA;AACA,WAbA;AAcA,SApBA,EAqBAA,KArBA,CAqBA;AACA;AACA,SAvBA;AAwBA;AACA;AAzIA,GAvEA;AAkNAS;AACAC,oBADA,4BACA7C,MADA,EACA;AACA;AACA,iBADA;AAEA,oBAFA;AAGA;AAHA;AAKA;AACA,KARA;AASA8C,oBATA,4BASA9C,MATA,EASA;AACA;AACA,eADA;AAEA,eAFA;AAGA;AAHA;AAKA;AACA;AAhBA,GAlNA;AAoOA+C,SApOA,qBAoOA,EApOA;AAqOAC,SArOA,qBAqOA;AACA;AACA;AACA;AACA,kDAJA,CAKA;;AACA,mBANA,CAOA;;AACA;AACA;AA9OA","names":["authAdminList","authAdminRoleList","authAdminSave","authAdminDelete","id","password","username","checkPassword","status","roles","data","callback","query","page","limit","role_id","list","total","loading","index","formName","formMap","add","edit","formLoading","formVisible","formData","formRules","addRules","required","message","trigger","validator","editRules","deleteLoading","methods","onReset","path","onSubmit","handleCurrentChange","val","getList","then","catch","getRoleList","resetForm","hideForm","handleForm","row","formSubmit","handleDel","type","filters","statusFilterType","statusFilterName","mounted","created"],"sourceRoot":"src/views/userManage/admin","sources":["authAdmin.vue"],"sourcesContent":["<template>\n\n    <div>\n        <el-form :inline=\"true\" :model=\"query\" class=\"query-form\" size=\"mini\">\n            <el-form-item class=\"query-form-item\">\n                <el-input v-model=\"query.username\" placeholder=\"用户名\"></el-input>\n            </el-form-item>\n            <el-form-item class=\"query-form-item\">\n                <el-select v-model=\"query.status\" placeholder=\"状态\">\n                    <el-option label=\"全部\" value=\"\"></el-option>\n                    <el-option label=\"禁用\" value=\"0\"></el-option>\n                    <el-option label=\"正常\" value=\"1\"></el-option>\n                    <el-option label=\"未验证\" value=\"2\"></el-option>\n                </el-select>\n            </el-form-item>\n            <el-form-item class=\"query-form-item\">\n                <el-select v-model=\"query.role_id\" placeholder=\"角色\">\n                    <el-option label=\"全部角色\" value=\"\"></el-option>\n                    <el-option v-for=\"item in roles\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\n                </el-select>\n            </el-form-item>\n\n            <el-form-item>\n                <el-button-group>\n                    <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"onReset\"></el-button>\n                    <el-button type=\"primary\" icon=\"search\" @click=\"onSubmit\">查询</el-button>\n                    <el-button type=\"primary\" @click.native=\"handleForm(null,null)\">新增</el-button>\n                </el-button-group>\n            </el-form-item>\n        </el-form>\n        <el-table\n            v-loading=\"loading\"\n            :data=\"list\"\n            style=\"width: 100%;\"\n            max-height=\"500\">\n            <el-table-column\n                label=\"用户 ID\"\n                prop=\"id\"\n                fixed>\n            </el-table-column>\n            <el-table-column\n                label=\"用户名\"\n                prop=\"username\"\n                fixed>\n            </el-table-column>\n            <el-table-column\n                label=\"状态\">\n                <template slot-scope=\"scope\">\n                    <el-tag :type=\"scope.row.status | statusFilterType\">{{scope.row.status | statusFilterName}}</el-tag>\n                </template>\n            </el-table-column>\n            <el-table-column\n                label=\"登录时间\"\n                with=\"300\"\n                :show-overflow-tooltip=\"true\">\n                <template slot-scope=\"scope\">\n                    <i class=\"el-icon-time\"></i>\n                    <span>{{ scope.row.last_login_time }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column\n                label=\"登录IP\">\n                <template slot-scope=\"scope\">\n                    <span>{{ scope.row.last_login_ip }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column\n                label=\"操作\"\n                fixed=\"right\">\n                <template slot-scope=\"scope\">\n                    <el-button type=\"text\" size=\"small\" @click.native=\"handleForm(scope.$index, scope.row)\">编辑\n                    </el-button>\n                    <el-button type=\"text\" size=\"small\" @click.native=\"handleDel(scope.$index, scope.row)\">删除\n                    </el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n\n        <el-pagination\n            :page-size=\"query.limit\"\n            @current-change=\"handleCurrentChange\"\n            layout=\"prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n\n        <!--表单-->\n        <el-dialog\n            :title=\"formMap[formName]\"\n            :visible.sync=\"formVisible\"\n            :before-close=\"hideForm\"\n            width=\"85%\"\n            top=\"5vh\">\n            <el-form :model=\"formData\" :rules=\"formRules\" ref=\"dataForm\">\n                <el-form-item label=\"用户名\" prop=\"username\">\n                    <el-input v-model=\"formData.username\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"登录密码\" prop=\"password\">\n                    <el-input type=\"password\" v-model=\"formData.password\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"确认密码\" prop=\"checkPassword\">\n                    <el-input type=\"password\" v-model=\"formData.checkPassword\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"状态\" prop=\"status\">\n                    <el-radio-group v-model=\"formData.status\">\n                        <el-radio :label=\"0\">禁用</el-radio>\n                        <el-radio :label=\"1\">正常</el-radio>\n                        <el-radio :label=\"2\">未验证</el-radio>\n                    </el-radio-group>\n                </el-form-item>\n                <el-form-item label=\"角色\">\n                    <el-checkbox-group v-model=\"formData.roles\">\n                        <el-checkbox v-for=\"item in roles\" :key=\"item.id\" :label=\"item.id\">{{item.name}}</el-checkbox>\n                    </el-checkbox-group>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"hideForm\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"formSubmit()\" :loading=\"formLoading\">提交</el-button>\n            </div>\n        </el-dialog>\n    </div>\n\n</template>\n\n<script>\nimport {\n    authAdminList,\n    authAdminRoleList,\n    authAdminSave,\n    authAdminDelete\n} from \"../../../api/auth/authAdmin\";\nconst formJson = {\n    id: \"\",\n    password: \"\",\n    username: \"\",\n    checkPassword: \"\",\n    status: 1,\n    roles: []\n};\nexport default {\n    data() {\n        let validatePass = (rule, value, callback) => {\n            if (value === \"\") {\n                callback(new Error(\"请输入密码\"));\n            } else {\n                callback();\n            }\n        };\n        let validatePass2 = (rule, value, callback) => {\n            if (value === \"\") {\n                callback(new Error(\"请再次输入密码\"));\n            } else if (value !== this.formData.password) {\n                callback(new Error(\"两次输入密码不一致!\"));\n            } else {\n                callback();\n            }\n        };\n        return {\n            roles: [],\n            query: {\n                username: \"\",\n                status: \"\",\n                page: 1,\n                limit: 20,\n                role_id: \"\"\n            },\n            list: [],\n            total: 0,\n            loading: true,\n            index: null,\n            formName: null,\n            formMap: {\n                add: \"新增\",\n                edit: \"编辑\"\n            },\n            formLoading: false,\n            formVisible: false,\n            formData: formJson,\n            formRules: {},\n            addRules: {\n                username: [\n                    { required: true, message: \"请输入姓名\", trigger: \"blur\" }\n                ],\n                password: [\n                    { required: true, message: \"请输入密码\", trigger: \"blur\" },\n                    { validator: validatePass, trigger: \"blur\" }\n                ],\n                checkPassword: [\n                    {\n                        required: true,\n                        message: \"请再次输入密码\",\n                        trigger: \"blur\"\n                    },\n                    { validator: validatePass2, trigger: \"blur\" }\n                ],\n                status: [\n                    { required: true, message: \"请选择状态\", trigger: \"change\" }\n                ]\n            },\n            editRules: {\n                username: [\n                    { required: true, message: \"请输入姓名\", trigger: \"blur\" }\n                ],\n                status: [\n                    { required: true, message: \"请选择状态\", trigger: \"change\" }\n                ]\n            },\n            deleteLoading: false\n        };\n    },\n    methods: {\n        onReset() {\n            this.$router.push({\n                path: \"\"\n            });\n            this.query = {\n                username: \"\",\n                status: \"\",\n                page: 1,\n                limit: 20,\n                role_id: \"\"\n            };\n            this.getList();\n        },\n        onSubmit() {\n            this.$router.push({\n                path: \"\",\n                query: this.query\n            });\n            this.getList();\n        },\n        handleCurrentChange(val) {\n            this.query.page = val;\n            this.getList();\n        },\n        getList() {\n            this.loading = true;\n            authAdminList(this.query)\n                .then(response => {\n                    this.loading = false;\n                    this.list = response.data.list || [];\n                    this.total = response.data.total || 0;\n                })\n                .catch(() => {\n                    this.loading = false;\n                    this.list = [];\n                    this.total = 0;\n                    this.roles = [];\n                });\n        },\n        getRoleList() {\n            authAdminRoleList(this.query)\n                .then(response => {\n                    this.roles = response.data.list || [];\n                })\n                .catch(() => {\n                    this.roles = [];\n                });\n        },\n        // 刷新表单\n        resetForm() {\n            if (this.$refs[\"dataForm\"]) {\n                // 清空验证信息表单\n                this.$refs[\"dataForm\"].clearValidate();\n                // 刷新表单\n                this.$refs[\"dataForm\"].resetFields();\n            }\n        },\n        // 隐藏表单\n        hideForm() {\n            // 更改值\n            this.formVisible = !this.formVisible;\n            // 清空表单\n            this.$refs[\"dataForm\"].resetFields();\n            return true;\n        },\n        // 显示表单\n        handleForm(index, row) {\n            this.formVisible = true;\n            this.formData = JSON.parse(JSON.stringify(formJson));\n            if (row !== null) {\n                this.formData = Object.assign({}, row);\n            }\n            this.formName = \"add\";\n            this.formRules = this.addRules;\n            if (index !== null) {\n                this.index = index;\n                this.formName = \"edit\";\n                this.formRules = this.editRules;\n            }\n        },\n        formSubmit() {\n            this.$refs[\"dataForm\"].validate(valid => {\n                if (valid) {\n                    this.formLoading = true;\n                    let data = Object.assign({}, this.formData);\n                    authAdminSave(data, this.formName).then(response => {\n                        this.formLoading = false;\n                        if (response.code) {\n                            this.$message.error(response.message);\n                            return false;\n                        }\n                        this.$message.success(\"操作成功\");\n                        this.formVisible = false;\n                        if (this.formName === \"add\") {\n                            // 向头部添加数据\n                            if (response.data && response.data.id) {\n                                data.id = response.data.id;\n                                this.list.unshift(data);\n                            }\n                        } else {\n                            this.list.splice(this.index, 1, data);\n                        }\n                        // 刷新表单\n                        this.resetForm();\n                    });\n                }\n            });\n        },\n        // 删除\n        handleDel(index, row) {\n            if (row.id) {\n                this.$confirm(\"确认删除该记录吗?\", \"提示\", {\n                    type: \"warning\"\n                })\n                    .then(() => {\n                        let para = { id: row.id };\n                        this.deleteLoading = true;\n                        authAdminDelete(para)\n                            .then(response => {\n                                this.deleteLoading = false;\n                                if (response.code) {\n                                    this.$message.error(response.message);\n                                    return false;\n                                }\n                                this.$message.success(\"操作成功\");\n                                // 刷新数据\n                                this.list.splice(index, 1);\n                            })\n                            .catch(() => {\n                                this.deleteLoading = false;\n                            });\n                    })\n                    .catch(() => {\n                        this.$message.info(\"取消删除\");\n                    });\n            }\n        }\n    },\n    filters: {\n        statusFilterType(status) {\n            const statusMap = {\n                0: \"gray\",\n                1: \"success\",\n                2: \"danger\"\n            };\n            return statusMap[status];\n        },\n        statusFilterName(status) {\n            const statusMap = {\n                0: \"禁用\",\n                1: \"正常\",\n                2: \"未验证\"\n            };\n            return statusMap[status];\n        }\n    },\n    mounted() {},\n    created() {\n        // 将参数拷贝进查询对象\n        let query = this.$route.query;\n        this.query = Object.assign(this.query, query);\n        this.query.limit = parseInt(this.query.limit);\n        // 加载表格数据\n        this.getList();\n        // 加载角色列表\n        this.getRoleList();\n    }\n};\n</script>\n\n<style type=\"text/scss\" lang=\"scss\">\n</style>\n"]}]}