{"remainingRequest":"/Users/quan/code/vue-admin-php/view/node_modules/thread-loader/dist/cjs.js!/Users/quan/code/vue-admin-php/view/node_modules/babel-loader/lib/index.js!/Users/quan/code/vue-admin-php/view/node_modules/eslint-loader/index.js??ref--13-0!/Users/quan/code/vue-admin-php/view/src/store/modules/app.js","dependencies":[{"path":"/Users/quan/code/vue-admin-php/view/src/store/modules/app.js","mtime":1648609501794},{"path":"/Users/quan/code/vue-admin-php/view/babel.config.js","mtime":1648609501757},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/cache-loader/dist/cjs.js","mtime":1614678925383},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/thread-loader/dist/cjs.js","mtime":1614678926780},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/babel-loader/lib/index.js","mtime":1648609858414},{"path":"/Users/quan/code/vue-admin-php/view/node_modules/eslint-loader/index.js","mtime":1614678921459}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _defineProperty from \"/Users/quan/code/vue-admin-php/view/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/quan/code/vue-admin-php/view/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"/Users/quan/code/vue-admin-php/view/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js\";\n\nvar _mutations;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { getStore, setStore } from \"../../utils/store\";\nimport * as types from \"../mutation-types\";\nvar state = {\n  sidebar: {\n    opened: !+getStore(\"sidebarStatus\")\n  },\n  visitedViews: []\n}; // getters\n\nvar getters = {\n  sidebar: function sidebar(state) {\n    return state.sidebar;\n  },\n  visitedViews: function visitedViews(state) {\n    return state.visitedViews;\n  }\n}; // actions\n\nvar actions = {\n  ToggleSideBar: function ToggleSideBar(_ref) {\n    var commit = _ref.commit;\n    commit(types.TOGGLE_SIDEBAR);\n  },\n  ShowSideBar: function ShowSideBar(_ref2) {\n    var commit = _ref2.commit;\n    commit(types.SHOW_SIDEBAR);\n  },\n  addVisitedViews: function addVisitedViews(_ref3, view) {\n    var commit = _ref3.commit;\n    commit(types.ADD_VISITED_VIEWS, view);\n  },\n  delVisitedViews: function delVisitedViews(_ref4, view) {\n    var commit = _ref4.commit,\n        state = _ref4.state;\n    return new Promise(function (resolve) {\n      commit(types.DEL_VISITED_VIEWS, view);\n      resolve(_toConsumableArray(state.visitedViews));\n    });\n  }\n}; // mutations\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, types.TOGGLE_SIDEBAR, function (state) {\n  if (state.sidebar.opened) {\n    setStore(\"sidebarStatus\", 1, 365);\n  } else {\n    setStore(\"sidebarStatus\", 0, 365);\n  }\n\n  state.sidebar.opened = !state.sidebar.opened;\n}), _defineProperty(_mutations, types.SHOW_SIDEBAR, function (state) {\n  if (state.sidebar.opened) {\n    setStore(\"sidebarStatus\", 1, 365);\n  }\n\n  state.sidebar.opened = false;\n}), _defineProperty(_mutations, types.ADD_VISITED_VIEWS, function (state, view) {\n  if (state.visitedViews.some(function (v) {\n    return v.path === view.path;\n  })) return;\n  state.visitedViews.push({\n    name: view.name,\n    path: view.path\n  });\n}), _defineProperty(_mutations, types.DEL_VISITED_VIEWS, function (state, view) {\n  var index;\n\n  var _iterator = _createForOfIteratorHelper(state.visitedViews.entries()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          i = _step$value[0],\n          v = _step$value[1];\n\n      if (v.path === view.path) {\n        index = i;\n        break;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  state.visitedViews.splice(index, 1);\n}), _mutations);\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/quan/code/vue-admin-php/view/src/store/modules/app.js"],"names":["getStore","setStore","types","state","sidebar","opened","visitedViews","getters","actions","ToggleSideBar","commit","TOGGLE_SIDEBAR","ShowSideBar","SHOW_SIDEBAR","addVisitedViews","view","ADD_VISITED_VIEWS","delVisitedViews","Promise","resolve","DEL_VISITED_VIEWS","mutations","some","v","path","push","name","index","entries","i","splice"],"mappings":"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","sourcesContent":["import { getStore, setStore } from \"../../utils/store\";\nimport * as types from \"../mutation-types\";\n\nconst state = {\n    sidebar: {\n        opened: !+getStore(\"sidebarStatus\")\n    },\n    visitedViews: []\n};\n\n// getters\nconst getters = {\n    sidebar: state => state.sidebar,\n    visitedViews: state => state.visitedViews\n};\n\n// actions\nconst actions = {\n    ToggleSideBar({ commit }) {\n        commit(types.TOGGLE_SIDEBAR);\n    },\n    ShowSideBar({ commit }) {\n        commit(types.SHOW_SIDEBAR);\n    },\n    addVisitedViews({ commit }, view) {\n        commit(types.ADD_VISITED_VIEWS, view);\n    },\n    delVisitedViews({ commit, state }, view) {\n        return new Promise(resolve => {\n            commit(types.DEL_VISITED_VIEWS, view);\n            resolve([...state.visitedViews]);\n        });\n    }\n};\n\n// mutations\nconst mutations = {\n    [types.TOGGLE_SIDEBAR](state) {\n        if (state.sidebar.opened) {\n            setStore(\"sidebarStatus\", 1, 365);\n        } else {\n            setStore(\"sidebarStatus\", 0, 365);\n        }\n        state.sidebar.opened = !state.sidebar.opened;\n    },\n    [types.SHOW_SIDEBAR](state) {\n        if (state.sidebar.opened) {\n            setStore(\"sidebarStatus\", 1, 365);\n        }\n        state.sidebar.opened = false;\n    },\n    [types.ADD_VISITED_VIEWS](state, view) {\n        if (state.visitedViews.some(v => v.path === view.path)) return;\n        state.visitedViews.push({ name: view.name, path: view.path });\n    },\n    [types.DEL_VISITED_VIEWS](state, view) {\n        let index;\n        for (const [i, v] of state.visitedViews.entries()) {\n            if (v.path === view.path) {\n                index = i;\n                break;\n            }\n        }\n        state.visitedViews.splice(index, 1);\n    }\n};\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n};\n"]}]}